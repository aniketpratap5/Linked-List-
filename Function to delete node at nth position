class Node {
    int data;
    Node next;
    Node(int d) { data = d; next = null; }
}

public class DeleteNthPosition {
    Node head;
    void add(int d) {
        Node newNode = new Node(d);
        if (head == null) { head = newNode; return; }
        Node temp = head;
        while (temp.next != null) temp = temp.next;
        temp.next = newNode;
    }

    void deleteAtPosition(int n) {
        if (head == null) return;

        // if deleting head
        if (n == 1) {
            head = head.next;
            return;
        }

        Node temp = head;
        for (int i = 1; temp != null && i < n - 1; i++) {
            temp = temp.next;
        }

        // if position is invalid
        if (temp == null || temp.next == null) return;

        temp.next = temp.next.next;
    }

    void print() {
        Node t = head;
        while (t != null) { 
            System.out.print(t.data + " "); 
            t = t.next; 
        }
        System.out.println();
    }

    public static void main(String[] args) {
        DeleteNthPosition list = new DeleteNthPosition();
        list.add(10);
        list.add(20);
        list.add(30);
        list.add(40);
        list.add(50);

        System.out.println("Before:");
        list.print();

        list.deleteAtPosition(3); 

        System.out.println("After:");
        list.print();
    }
}
